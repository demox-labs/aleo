/*! For license information please see 530.bundle.js.LICENSE.txt */
(()=>{var e,r,t,n,a,i,s={5052:(e,r,t)=>{t.a(e,(async(e,n)=>{try{t.d(r,{AleoKeyProvider:()=>p,AleoKeyProviderParams:()=>u,ProgramManager:()=>l});var a=t(9933),i=e([a]);a=(i.then?(await i)():i)[0];async function s(e){const r=await fetch(e);if(!r.ok)throw new Error(r.status+" could not get URL "+e);return r}async function c(e,r){r.method="POST";const t=await fetch(e,r);if(!t.ok)throw new Error(t.status+" could not post URL "+e);return t}class h{host;account;constructor(e){this.host=e+"/testnet3"}setAccount(e){this.account=e}getAccount(){return this.account}setHost(e){this.host=e+"/testnet3"}async fetchData(e="/"){try{const r=await s(this.host+e);return await r.json()}catch(e){throw new Error("Error fetching data.")}}async findUnspentRecords(e,r,t,n,i,s){if(s=s||[],e<0)throw new Error("Start height must be greater than or equal to 0");const c=new Array;let q,o,f,h,u=0,p=BigInt(0);if(void 0===t){if(void 0===this.account)throw new Error("Private key must be specified in an argument to findOwnedRecords or set in the AleoNetworkClient");f=this.account._privateKey}else try{f=t instanceof a._q?t:a._q.from_string(t)}catch(e){throw new Error("Error parsing private key provided.")}const l=f.to_view_key();try{const e=await this.getLatestHeight();if("number"!=typeof e)throw new Error("Error fetching latest block height.");h=e}catch(e){throw new Error("Error fetching latest block height.")}if(o="number"==typeof r&&r<=h?r:h,e>o)throw new Error("Start height must be less than or equal to end height.");for(;o>e;){q=o-50,q<e&&(q=e);try{const e=await this.getBlockRange(q,o);if(o=q,!(e instanceof Error))for(let r=0;r<e.length;r++){const t=e[r].transactions;if(void 0!==t)for(let e=0;e<t.length;e++){const r=t[e];if("execute"==r.type){const e=r.transaction;if(e.execution&&void 0!==e.execution.transitions)for(let r=0;r<e.execution.transitions.length;r++){const t=e.execution.transitions[r];if("credits.aleo"===t.program&&void 0!==t.outputs)for(let e=0;e<t.outputs.length;e++){const r=t.outputs[e];if("record"===r.type)try{const e=a.fW.fromString(r.value);if(e.isOwner(l)){const r=e.decrypt(l),t=r.nonce();if(s.includes(t))continue;const a=r.serialNumberString(f,"credits.aleo","credits");try{await this.getTransitionId(a)}catch(e){if(!n&&(c.push(r),"number"==typeof i&&(p+=r.microcredits(),p>=BigInt(i))))return c;if(void 0!==n&&n.length>0){let e=0;if(r.microcredits()>n[e]){if(e+=1,c.push(r),"number"==typeof i&&(p+=r.microcredits(),p>=BigInt(i)))return c;if(c.length>=n.length)return c}}}}}catch(e){}}}}}}}catch(e){if(console.warn("Error fetching blocks in range: "+q.toString()+"-"+o.toString()),console.warn("Error: ",e),u+=1,u>10)return console.warn("10 failures fetching records reached. Returning records fetched so far"),c}}return c}async getBlock(e){try{return await this.fetchData("/block/"+e)}catch(e){throw new Error("Error fetching block.")}}async getBlockRange(e,r){try{return await this.fetchData("/blocks?start="+e+"&end="+r)}catch(t){throw new Error("Error fetching blocks between "+e+" and "+r+".")}}async getDeploymentTransactionIDForProgram(e){e instanceof a.$r&&(e=e.toString());try{return(await this.fetchData("/find/transactionID/deployment/"+e)).replace('"',"")}catch(e){throw new Error("Error fetching deployment transaction for program.")}}async getDeploymentTransactionForProgram(e){try{const r=await this.getDeploymentTransactionIDForProgram(e);return await this.getTransaction(r)}catch(e){throw new Error("Error fetching deployment transaction for program.")}}async getLatestBlock(){try{return await this.fetchData("/latest/block")}catch(e){throw new Error("Error fetching latest block.")}}async getLatestCommittee(){try{return await this.fetchData("/committee/latest")}catch(e){throw new Error("Error fetching latest block.")}}async getLatestHeight(){try{return await this.fetchData("/latest/height")}catch(e){throw new Error("Error fetching latest height.")}}async getProgram(e){try{return await this.fetchData("/program/"+e)}catch(e){throw new Error("Error fetching program")}}async getProgramObject(e){try{return a.$r.fromString(e)}catch(r){try{return a.$r.fromString(await this.getProgram(e))}catch(r){throw new Error(`${e} is neither a program name or a valid program`)}}}async getProgramImports(e){try{const r={},t=(e instanceof a.$r?e:await this.getProgramObject(e)).getImports();for(let e=0;e<t.length;e++){const n=t[e];if(!r.hasOwnProperty(n)){const e=await this.getProgram(n),t=await this.getProgramImports(n);for(const e in t)r.hasOwnProperty(e)||(r[e]=t[e]);r[n]=e}}return r}catch(e){throw f("Error fetching program imports: "+e)}}async getProgramImportNames(e){try{return(e instanceof a.$r?e:await this.getProgramObject(e)).getImports()}catch(e){throw new Error("Error fetching program imports with error: "+e)}}async getProgramMappingNames(e){try{return await this.fetchData("/program/"+e+"/mappings")}catch(e){throw new Error("Error fetching program mappings - ensure the program exists on chain before trying again")}}async getProgramMappingValue(e,r,t){try{return await this.fetchData("/program/"+e+"/mapping/"+r+"/"+t)}catch(e){throw new Error("Error fetching mapping value - ensure the mapping exists and the key is correct")}}async getStateRoot(){try{return await this.fetchData("/latest/stateRoot")}catch(e){throw new Error("Error fetching Aleo state root")}}async getTransaction(e){try{return await this.fetchData("/transaction/"+e)}catch(e){throw new Error("Error fetching transaction.")}}async getTransactions(e){try{return await this.fetchData("/block/"+e.toString()+"/transactions")}catch(e){throw new Error("Error fetching transactions.")}}async getTransactionsInMempool(){try{return await this.fetchData("/memoryPool/transactions")}catch(e){throw new Error("Error fetching transactions from mempool.")}}async getTransitionId(e){try{return await this.fetchData("/find/transitionID/"+e)}catch(e){throw new Error("Error fetching transition ID.")}}async submitTransaction(e){const r=e instanceof a.YW?e.toString():e;try{const e=await c(this.host+"/transaction/broadcast",{body:r,headers:{"Content-Type":"application/json"}});try{return await e.json()}catch(e){throw new Error(`Error posting transaction. Aleo network response: ${e.message}`)}}catch(e){throw new Error(`Error posting transaction: No response received: ${e.message}`)}}}class u{proverUri;verifierUri;cacheKey;constructor(e){this.proverUri=e.proverUri,this.verifierUri=e.verifierUri,this.cacheKey=e.cacheKey}}class p{cache;cacheOption;keyUris;async fetchBytes(e="/"){try{const r=await s(e),t=await r.arrayBuffer();return new Uint8Array(t)}catch(e){throw new Error("Error fetching data."+e)}}constructor(){this.keyUris=y,this.cache=new Map,this.cacheOption=!1}useCache(e){this.cacheOption=e}clearCache(){this.cache.clear()}cacheKeys(e,r){const[t,n]=r;this.cache.set(e,[t.toBytes(),n.toBytes()])}containsKeys(e){return this.cache.has(e)}deleteKeys(e){return this.cache.delete(e)}getKeys(e){if(console.debug(`Checking if key exists in cache. KeyId: ${e}`),this.cache.has(e)){const[r,t]=this.cache.get(e);return[a.zW.fromBytes(r),a.XV.fromBytes(t)]}return new Error("Key not found in cache.")}async functionKeys(e){if(e){let r,t,n;if("proverUri"in e&&"string"==typeof e.proverUri&&(r=e.proverUri),"verifierUri"in e&&"string"==typeof e.verifierUri&&(t=e.verifierUri),"cacheKey"in e&&"string"==typeof e.cacheKey&&(n=e.cacheKey),r&&t)return await this.fetchKeys(r,t,n);if(n)return this.getKeys(n)}throw Error("Invalid parameters provided, must provide either a cacheKey and/or a proverUrl and a verifierUrl")}async fetchKeys(e,r,t){try{if(this.cacheOption){t||(t=e);const n=this.cache.get(t);if(void 0!==n)return[a.zW.fromBytes(n[0]),a.XV.fromBytes(n[1])];{console.debug("Fetching proving keys from url "+e);const n=a.zW.fromBytes(await this.fetchBytes(e));console.debug("Fetching verifying keys "+r);const i=await this.getVerifyingKey(r);return this.cache.set(t,[n.toBytes(),i.toBytes()]),[n,i]}}{const t=a.zW.fromBytes(await this.fetchBytes(e));return[t,await this.getVerifyingKey(r)]}}catch(t){throw new Error(`Error: ${t} fetching fee proving and verifying keys from ${e} and ${r}.`)}}async transferKeys(e){if(w.has(e))return await this.fetchKeys(v.transfer_private.prover,v.transfer_private.verifier);if(m.has(e))return await this.fetchKeys(v.transfer_private_to_public.prover,v.transfer_private_to_public.verifier);if(k.has(e))return await this.fetchKeys(v.transfer_public.prover,v.transfer_public.verifier);if(j.has(e))return await this.fetchKeys(v.transfer_public_to_private.prover,v.transfer_public_to_private.verifier);throw new Error("Invalid visibility type")}async joinKeys(){return await this.fetchKeys(v.join.prover,v.join.verifier)}async splitKeys(){return await this.fetchKeys(v.split.prover,v.split.verifier)}async feePrivateKeys(){return await this.fetchKeys(v.fee_private.prover,v.fee_private.verifier)}async feePublicKeys(){return await this.fetchKeys(v.fee_public.prover,v.fee_public.verifier)}async getVerifyingKey(e){switch(e){case v.bond_public.verifier:return a.XV.fromString(v.bond_public.verifyingKey);case v.claim_unbond_public.verifier:return a.XV.fromString(v.claim_unbond_public.verifyingKey);case v.fee_private.verifier:return a.XV.fromString(v.fee_private.verifyingKey);case v.fee_public.verifier:return a.XV.fromString(v.fee_public.verifyingKey);case v.inclusion.verifier:return a.XV.fromString(v.inclusion.verifyingKey);case v.join.verifier:return a.XV.fromString(v.join.verifyingKey);case v.split.verifier:return a.XV.fromString(v.split.verifyingKey);case v.transfer_private.verifier:return a.XV.fromString(v.transfer_private.verifyingKey);case v.transfer_private_to_public.verifier:return a.XV.fromString(v.transfer_private_to_public.verifyingKey);case v.transfer_public.verifier:return a.XV.fromString(v.transfer_public.verifyingKey);case v.transfer_public_to_private.verifier:return a.XV.fromString(v.transfer_public_to_private.verifyingKey);case v.unbond_public.verifier:return a.XV.fromString(v.unbond_public.verifyingKey);default:return a.XV.fromBytes(await this.fetchBytes(e))}}}class l{account;keyProvider;host;networkClient;recordProvider;constructor(e,r,t){e?(this.host=e,this.networkClient=new h(e)):(this.host="https://api.explorer.aleo.org/v1",this.networkClient=new h(this.host)),this.keyProvider=r||new p,this.recordProvider=t}setAccount(e){this.account=e}setKeyProvider(e){this.keyProvider=e}setHost(e){this.host=e,this.networkClient.setHost(e)}setRecordProvider(e){this.recordProvider=e}async deploy(e,r,t,n,i,s){try{const r=a.$r.fromString(e);let t;try{t=await this.networkClient.getProgram(r.id())}catch(e){console.log(`Program ${r.id()} does not exist on the network, deploying...`)}if("string"==typeof t)throw`Program ${r.id()} already exists on the network, please rename your program`}catch(e){throw f(`Error validating program: ${e}`)}let c,q=s;if(void 0===s&&void 0!==this.account&&(q=this.account.privateKey()),void 0===q)throw"No private key provided and no private key set in the ProgramManager";try{i=t?await this.getCreditsRecord(r,[],i,n):void 0}catch(e){throw f(`Error finding fee record. Record finder response: '${e}'. Please ensure you're connected to a valid Aleo network and a record with enough balance exists.`)}try{c=t?await this.keyProvider.feePrivateKeys():await this.keyProvider.feePublicKeys()}catch(e){throw f(`Error finding fee keys. Key finder response: '${e}'. Please ensure your key provider is configured correctly.`)}const[o,h]=c;let u;try{u=await this.networkClient.getProgramImports(e)}catch(e){throw f(`Error finding program imports. Network response: '${e}'. Please ensure you're connected to a valid Aleo network and the program is deployed to the network.`)}const p=await a.L.buildDeploymentTransaction(q,e,r,i,this.host,u,o,h);return await this.networkClient.submitTransaction(p)}async execute(e,r,t,n,i,s,c,q,o,h,u,p){let l;try{l=await this.networkClient.getProgram(e)}catch(r){throw f(`Error finding ${e}. Network response: '${r}'. Please ensure you're connected to a valid Aleo network the program is deployed to the network.`)}let y,v=u;if(void 0===u&&void 0!==this.account&&(v=this.account.privateKey()),void 0===v)throw"No private key provided and no private key set in the ProgramManager";try{q=n?await this.getCreditsRecord(t,[],q,s):void 0}catch(e){throw f(`Error finding fee record. Record finder response: '${e}'. Please ensure you're connected to a valid Aleo network and a record with enough balance exists.`)}try{y=n?await this.keyProvider.feePrivateKeys():await this.keyProvider.feePublicKeys()}catch(e){throw f(`Error finding fee keys. Key finder response: '${e}'. Please ensure your key provider is configured correctly.`)}const[g,d]=y;if(!o||!h)try{[o,h]=await this.keyProvider.functionKeys(c)}catch(e){console.log(`Function keys not found. Key finder response: '${e}'. The function keys will be synthesized`)}let w;try{w=await this.networkClient.getProgramImports(e)}catch(e){throw f(`Error finding program imports. Network response: '${e}'. Please ensure you're connected to a valid Aleo network and the program is deployed to the network.`)}const m=await a.L.buildExecutionTransaction(v,l,r,i,t,q,this.host,w,o,h,g,d,p);return await this.networkClient.submitTransaction(m)}async executeOffline(e,r,t,n,i,s,c,q,o,f){let h=o;if(void 0===o&&void 0!==this.account&&(h=this.account.privateKey()),void 0===h)throw"No private key provided and no private key set in the ProgramManager";if(!c||!q)try{[c,q]=await this.keyProvider.functionKeys(s)}catch(e){console.log(`Function keys not found. Key finder response: '${e}'. The function keys will be synthesized`)}return console.log("Running program offline"),console.log("Proving key: ",c),console.log("Verifying key: ",q),a.L.executeFunctionOffline(h,e,r,t,n,!1,i,c,q,this.host,f)}async join(e,r,t,n,i,s,c,q){let o,h,u=c;if(void 0===c&&void 0!==this.account&&(u=this.account.privateKey()),void 0===u)throw"No private key provided and no private key set in the ProgramManager";try{o=n?await this.keyProvider.feePrivateKeys():await this.keyProvider.feePublicKeys(),h=await this.keyProvider.joinKeys()}catch(e){throw f(`Error finding fee keys. Key finder response: '${e}'. Please ensure your key provider is configured correctly.`)}const[p,l]=o,[y,v]=h;try{s=n?await this.getCreditsRecord(t,[],s,i):void 0}catch(e){throw f(`Error finding fee record. Record finder response: '${e}'. Please ensure you're connected to a valid Aleo network and a record with enough balance exists.`)}try{e=e instanceof a.PD?e:a.PD.fromString(e),r=r instanceof a.PD?r:a.PD.fromString(r)}catch(e){throw f("Records provided are not valid. Please ensure they are valid plaintext records.")}const g=await a.L.buildJoinTransaction(u,e,r,t,s,this.host,y,v,p,l,q);return await this.networkClient.submitTransaction(g)}async split(e,r,t,n){let i,s=t;if(void 0===s&&void 0!==this.account&&(s=this.account.privateKey()),void 0===s)throw"No private key provided and no private key set in the ProgramManager";try{i=await this.keyProvider.splitKeys()}catch(e){throw f(`Error finding fee keys. Key finder response: '${e}'. Please ensure your key provider is configured correctly.`)}const[c,q]=i;try{r=r instanceof a.PD?r:a.PD.fromString(r)}catch(e){throw f("Record provided is not valid. Please ensure it is a valid plaintext record.")}const o=await a.L.buildSplitTransaction(s,e,r,this.host,c,q,n);return await this.networkClient.submitTransaction(o)}async synthesizeKeys(e,r,t,n){let i,s=n;void 0===s&&(s=void 0!==this.account?this.account.privateKey():new a._q);try{i=await this.networkClient.getProgramImports(e);const n=await a.L.synthesizeKeyPair(s,e,r,t,i);return[n.provingKey(),n.verifyingKey()]}catch(e){throw f(`Could not synthesize keys - error ${e}. Please ensure the program is valid and the inputs are correct.`)}}async transfer(e,r,t,n,i,s,c,h,u,p){t=o(t);let l,y,v=u;if(void 0===v&&void 0!==this.account&&(v=this.account.privateKey()),void 0===v)throw"No private key provided and no private key set in the ProgramManager";try{l=i?await this.keyProvider.feePrivateKeys():await this.keyProvider.feePublicKeys(),y=await this.keyProvider.transferKeys(t)}catch(e){throw f(`Error finding fee keys. Key finder response: '${e}'. Please ensure your key provider is configured correctly.`)}const[g,d]=l,[w,m]=y;try{const e=[];q(t)?(c=await this.getCreditsRecord(n,[],c,s),e.push(c.nonce())):c=void 0,h=i?await this.getCreditsRecord(n,e,h,s):void 0}catch(e){throw f(`Error finding fee record. Record finder response: '${e}'. Please ensure you're connected to a valid Aleo network and a record with enough balance exists.`)}const k=await a.L.buildTransferTransaction(v,e,r,t,c,n,h,this.host,w,m,g,d,p);return await this.networkClient.submitTransaction(k)}async bondPublic(e,r,t={}){r=Math.trunc(1e6*r);const{offlineParams:n={},executionParams:a={}}=t||{};let{programName:i="credits.aleo",functionName:s="bond_public",fee:c=1,privateFee:q=!1,recordSearchParams:o,keySearchParams:f,feeRecord:h,provingKey:p,verifyingKey:l,privateKey:y}=a;void 0===f&&(f=new u({proverUri:v.bond_public.prover,verifierUri:v.bond_public.verifier,cacheKey:"credits.aleo/bond_public"}));const{offlineQuery:g}=n;return await this.execute(i,s,c,q,[e,`${r.toString()}u64`],o,f,h,p,l,y,g)}async unbondPublic(e,r={}){e=Math.trunc(1e6*e);const{offlineParams:t={},executionParams:n={}}=r||{};let{programName:a="credits.aleo",functionName:i="unbond_public",fee:s=1,privateFee:c=!1,recordSearchParams:q,keySearchParams:o,feeRecord:f,provingKey:h,verifyingKey:p,privateKey:l}=n;void 0===o&&(o=new u({proverUri:v.unbond_public.prover,verifierUri:v.unbond_public.verifier,cacheKey:"credits.aleo/unbond_public"}));const{offlineQuery:y}=t;return await this.execute(a,i,s,c,[`${e.toString()}u64`],q,o,f,h,p,l,y)}async claimUnbondPublic(e={}){const{offlineParams:r={},executionParams:t={}}=e||{};let{programName:n="credits.aleo",functionName:a="claim_unbond_public",fee:i=1,privateFee:s=!1,recordSearchParams:c,keySearchParams:q,feeRecord:o,provingKey:f,verifyingKey:h,privateKey:p}=t;void 0===q&&(q=new u({proverUri:v.claim_unbond_public.prover,verifierUri:v.claim_unbond_public.verifier,cacheKey:"credits.aleo/claim_unbond_public"}));const{offlineQuery:l}=r;return await this.execute(n,a,i,s,[],c,q,o,f,h,p,l)}verifyExecution(e){try{const r=e.getExecution(),t=e.getFunctionId(),n=e.getProgram(),i=e.getVerifyingKey();return(0,a.hz)(r,i,n,t)}catch(e){return console.warn("The execution was not found in the response, cannot verify the execution"),!1}}createProgramFromSource(e){return a.$r.fromString(e)}creditsProgram(){return a.$r.getCreditsProgram()}verifyProgram(e){try{return a.$r.fromString(e),!0}catch(e){return!1}}async getCreditsRecord(e,r,t,n){try{return t instanceof a.PD?t:a.PD.fromString(t)}catch(t){try{const t=this.recordProvider;return await t.findCreditsRecord(e,!0,r,n)}catch(e){throw f(`Error finding fee record. Record finder response: '${e}'. Please ensure you're connected to a valid Aleo network and a record with enough balance exists.`)}}}}function q(e){return g.has(e)}function o(e){return d.has(e)?e:f(`Invalid transfer type '${e}'. Valid transfer types are 'private', 'privateToPublic', 'public', and 'publicToPrivate'.`)}const y="https://testnet3.parameters.aleo.org/",v={bond_public:{prover:y+"bond_public.prover.ff75d2e",verifier:"bond_public.verifier.d3cfe73",verifyingKey:"verifier1qygqqqqqqqqqqqzl9uqqqqqqqqq9stcqqqqqqqqqxa4sqqqqqqqqqyuwqqqqqqqqqpdyqqqqqqqqqqqvqqqqqqqqqqqx9lfqwmck43wt597p8xn68dh8l9setmmtk0ev35tgzkzm3j0j4tgu2s9kdu5w9m7g4dkglj28wayp2njn9qkuygpmcf9j7qc32aafepe5d9tdqyrq9ju2e8mlhkq8tucdh30rxysfl9h7d9jusmjhjcwgpuh0hhlspvtuv98n453apnqceupv2tc26wwx9mjl7m8j0urgax42xzrc9sltd62pfjgnw7vxh36vqxzajv5tyer6hpld0fr75jah48gaqpnexurtrag0azpcpep4lyxeyt4jytug2u7urfrp8rjh5wlkqqz7htzt8fdnthyngd5eqqfc6q0d6zw8lwlyr3hgqkjmkshmw5trm2tqg7euqav6r2vssqm9ut7ecjqq2fqs3k8mjp769qv5r2q52hcre66ymggtva7ty32lqpnrgrhgsc78g7qc00y5z6m626umkhqmz8sp0s4jz6qrvc6s47sycncq6ryltq2tmfxkz22e0g79cy4dzcnu5rwjkl4x3f27gavm7gug50tqnkwqrrjd430j9n8rrg78lpqfye8drxcnd2lxdry9nza8vfg4v3jmnmcdw55pu4kahfrawe4guvaqx26hqxhesqzxe343fjyz7vajn6prhg0jwzjtjh75v5wtp3h2knnvtshzae2uxel720fxg0vyfvnncsnxdqrqjc8aw8avq9kucsvauju4d0ke989s7v55ha0nh3dvdd9rct56pvg87txnhre3qvwmw6acf6t4x5q2al4gwwpqjhsezx6zmth0qeene0v3prwuh8a56r7qafhnyd98f8lx7xv4v48q7q7fd2373ag4fz5pmslx7v5hmpreqrdyj5h6we0kd24wk80f8sq44exsed3egstrn409cwzs9ph8563nh7vy6pcjnqxqrkzqvsa860spwjjf78hyful7zk2l3e9s4u4l0hqdyt547qxz3xamy5gkmd"},claim_unbond_public:{prover:y+"claim_unbond_public.prover.4c492b0",verifier:"claim_unbond_public.verifier.3793e4c",verifyingKey:"verifier1qygqqqqqqqqqqq8lycqqqqqqqqq02fsqqqqqqqqq849sqqqqqqqqpe26qqqqqqqqqzfnwqqqqqqqqqqvqqqqqqqqqqqgyhv4exh3e2g4f3ek5hymm8ah5h5hdp8v0j52dsksskad9wsryetk3qcr5um8t4nnpnqvhlsk5vcpea7w8uca2pum92jh2has0ag2gq24up0qr7p5z34jzrmtjx2583vkffyywmnatjs5t05x4yyc534cpsutfr4jaxqc9dlmxfw7a5tl4nl9q9qvweaver0q04pfl65w5wuyaadlzjhkkrrjaskg86tmkqy8s8vug7dyjnpe55y5ju8eag63p49ufdyguxdw2fwt46nwer74m3xmv9z6jhgslfwjre4fwctkppytsqrwmlf5szn9ckj2r86sa7azq0ly9atfjeee3f2f3n8s3rkrzezpqmcrt5lv3xlmymgspyj2vn7ytgqj97aula7tuxfrcsk787shhdjyxdvepspp7f4jaxuunzeuw58kdwupfdn8wj89grv5pk5qmxap9xgqxwwf08k98xnkdrp3n4jme0ur5604xp2q9fxlc0aw47vwfcurtsp9nv0rajv4lmune4mx8h39jvkcpv4fnngk3me5d6vds4m5xe6vuqlz55gnzue7fyyt0vzuwsg8f2ztepupry8g32ee48gmj2lldg96qp5xxcjxetgrq8muj4n7w3kv56spy3zhw8xr7ngd4u6l20pk4yvlsamu3y7nr4na246qqnjszlz6jq0922q8dsefkf7cpz8tc0fv4t2uk6y7r8wy5vtmah2y80al3vmc3kma70p4utwf40mc7x33y66zsgq94e09r5mmj5us835tz95w5r8eqz335lz8rac72d4jzxg0c40nmskvl236nz9dysg6uxp80yugx7cqckstk9f79ha0s6k8nftlmqds3za97648k2usw7xnyf9echpy3lsdsaatleyt5w5z2qgqyrxlaxsgq3tytq4qhjrlfz2dz7kuy7dyr0u4q5p78ux8ylh8tcsau46jevm944a798"},fee_private:{prover:y+"fee_private.prover.43fab98",verifier:"fee_private.verifier.f3dfefc",verifyingKey:"verifier1qygqqqqqqqqqqq8rjvqqqqqqqqq00ycqqqqqqqqqusvszqqqqqqqpnf6qyqqqqqqqqcd6qqqqqqqqqqvqqqqqqqqqqq0plfjy36deglp5xr0lk3rccawpqgztrnjusxnlkc8hz6879me8ty8y7rxzc3qqafadrmvz0v2aluqjwezzwkmj3q9vmr0xgk3arehjhppu7scsw6h4nj08z7fswhyq739ypuh67ff0f0sg8787aq4w80gqrn8e5kduw8h002rkjrw907zqxawqu7qmumx5zayg7k55rdzn05eg5sl8swr7fveuhud3gmf9xjsqzd9x9az5ls4s8cwjgc5lmvkhphy67q0g7qwzee7hyavg335j25mllnywrtjcwfejt55qxag7wvggqtmtc3al0gy6q83hql4wagk37e200592az7n525s80c4xwr92jr8dt40t3fyjxzszrc9umk95psswq82kkg25sh25s3mw5z3xt9qy2ftm8ec4a8l8rwfuxfujjrxxnhmrqs4wsunec3ukd4mur4fkj8enqqqv9n37e5fyag7e33rxsyp63u5rfs8hn26slsmdaqzvp2flcz506r0hqncdtt07nhulltlh5wyq4gpxsln5td2v0treu7t8wanhq6yv8hswxla7cf3w8nv4p233gz0ry9n7sj2uduredwtykw2ec3fs8fqrjkz8agg2xj8t9wden6spzdfcl7jlw4rgzv4hjqvh4cw40yhh8udv5g6vd0jhhfmqevezq0zs4x2q2m7u0hq9mkvulj950t9a5tcm6suycdlaky8t568jevkn3tf9uu5laevjumvahk4cxjxam85kq0l5qrycnmdzgvm7hr8cvl8a7qzcmjkwh48krtxtduhcfn7hvt752slm0nvth0yf35jugxg7ah2kw5emcq4mk962eypxyvwahf4k5ql8376l5za4zvv2p7jzgkjjs4lc60nv3czmdmmc0qn5mwnlnaxmwazs3qzfea0z0sn3nflp8v2lwlczljxre975fnvw3vfyrrjze4wuxtkjg7j37fph"},fee_public:{prover:y+"fee_public.prover.634f153",verifier:"fee_public.verifier.09eeb4f",verifyingKey:"verifier1qygqqqqqqqqqqqrcxyqqqqqqqqq8yvgqqqqqqqqqndesqqqqqqqqpg56qqqqqqqqqqhyyqqqqqqqqqqvqqqqqqqqqqq9a3p0z8q2qzsgq6lsd3zeh3tvezv0d2wg9tykutk9s7dat8uyamgxv54vv5le5slhta92cs08905qy0mgfdx0r7hzc7ec4qn8wmkx2cvtrwggad5h898kkp20eheukemkhj6g37flhpmxq9hpk9q2kfcsr58ufzupqpgfthzxsrn0554ttqckrgfwjfnvpfqhy4evahxkzahkf85pqt0es3j5jc2kzpkcu4ausrm4k53evjtuy3tzc3jgwl7y5t79j0ddhprs6ls9x0qpvqggvkffjg0psvjrmf2rsw5xrdnmqxlx5qru82dsavaka5kfsvxgyrzdf4tzceghyeqpk55308pkc0sg63sgwt8fywksccjdkkrqkh00kgraeuq97zsydp9z6pagtqmaply94dacmk7qkgg5jt36exjxcjdckjgswc5agg9xd4lqmpxxmtur7d7ecvvpg5rg4mzlf65hlpeynczqwdgrdekx7m3n4ljumgezxyzq7h9wmnrqfawayl5gns8gv2jaucwc9qmcq7pj6kvddw8dgpdf0rh66a6erzj9fmupu8ulc2x64092k5sfdm6rlaktdv8fscn8wlct0p9xahl2qqnxsw3tfzms5xplll4xamrlhtjm2xfsqmx62er2lmmzn6wk8788hcpg7uetlrufwlvmapeh00h9aqql6ggsknvwt45wjmfkky7z5ukly3dpjqvqt3yl839d8flcx6kpf5vqvdm57kqdwjazcmfn4ae87yqg08dlw805prfrfjvlyff3kq09z2yxc0pcaqalj7r4e6lygruk2ezpkfjlslyjtek6rtgvfwavqa5pmp6jgmr8xzu5dk0lcmfgm0plw8jkwt60pz2scpuh78k7f4dlfp7grjpn3xtdphhsn0k8rpfwqq3qr6huef2asc990ragxknla7kdl76xr2g2vl8pnql3f58wgcptked7rgeah8"},inclusion:{prover:y+"inclusion.prover.cd85cc5",verifier:"inclusion.verifier.e6f3add",verifyingKey:"verifier1qyyqqqqqqqqqqqzq7qqsqqqqqqq0huqpqqqqqqqqjvksgqqqqqqqqnypqgqqqqqqqzk8sqcqqqqqqqqvqqqqqqqqqqqxsh33gk03qelqrvy0g5m2km5vfhs6flwsutadvdl3nd82a3xqunx8pgaccs2yh654tpnanywulgvpvfxuma59ufttju8mvnpmuhg720p6fawv4ynhe75vfhn3te00saqpd5kpgxw59gf4r3ng3z0hr49gpwlwgkac7zlqk7cne5xh33m96qep9xeu2nf68dye57yqrnqgtaa2vk3ldcpurjn3s4pavzde8cehsrqn57qm2ewew3t4g6css5qzgfywdkkrx0rmz5u68cxvrwaksjd4s2exerl3u7cae58tc383yzd5tqxk66xqldl3ch8ymq73jhufwfcp4r8vcynmjenzt355a3qnejfndw7v5sn9a63wrd86rczgrp8wsuqsth7346q3qgaddsj6ln92233jjvke2krn809qvt8ev940hfclr5etza54055m8upn5jhg224v27cqamjy5lv3qm5nyc9asy0tqz0xsgmkuyp75t2qgv3h9s4av3u5tpmf8qkf7k7gp8rjlf67uncphscspvlmku59mgn4cqlxqqz3qdsyycs2my3emuyj9vnzt0464rfgnnmxwnw4kkqe50f764fjauj73kqcsxzn5mecv507xnetxvhfkt79r6hfvf6nzl735xtfp4r7uxlns3dazwj9mgl4fayzv0nqprh80ydqtq9tl6ffcmav2mlsky8tdrunewu3z8a2qg5wfhxz4j0xsqzfsr50ts63g0wysvnkt4rd6equa0r6fsqhrsjft0qy4jnstawrmnj28llqfgemj868y6aaw5rjftgp5vezg7r2c4q5zeupt4gghwand0jeyv5qfnxtnzh7wflxh7tdd0q6zh2fy635xhmllux8hk946t3kzenmc0355mz309gfachp2verz2qaepxsrj63nr54uga9eh2xcgp85v90dellhsvyx73m2w2qyed52svs62ysg7e3ag"},join:{prover:y+"join.prover.1a76fe8",verifier:"join.verifier.4f1701b",verifyingKey:"verifier1qygqqqqqqqqqqqz2cvqqqqqqqqqx0scqqqqqqqqqc42qzqqqqqqqpvmfqyqqqqqqqquzwqgqqqqqqqqvqqqqqqqqqqqpz6knqjfm77py0mpx68rmc6yavzrjpn3vdn5rmhum6u47fxt3j7auv5mk8epjx0hsa7nfm4llzwqqj84x9cnerm5gach0nzfy0jsvfrylvld5ffe8g63nhw5qng68rs6yrlzrc5229ezc8j4n4y0f2hrqqmdphh3mpglur7evq52n6mx9nls064fpn8wr3vqz75vextjhjmpvcrgs8har5txjnh9tj8lmlusns8nklkw8dh8nc8sv0llh4cgw95l3m7mwugu5nfrrlmyccnmrues4wl0hdfwsq8wvn60y2hl036g3aqzh5cn6n2366fy4hawjn22mj86w2w7twq80pdrea6svl7uq5zyh9nz4qgd72tql95n2xx0zh3wcjyqca5wzv4276exszaunpjduuvjmture49av40ve03akc9qw709wuf9a8hhpwlwwz8acf2z5ngk2d95qzfqhkmllqx4lnupyevkn8zthgu54x55t4cqm7uvmmnu3vtvkmsr4tldemm26shwk8ux27v6lmxkqppuesjj5d3m7x5rsg7yn8cg6hkat6fy8u8zj3n0z26ehqvmq8x2fadtw5jt6pxxfp3cm40ak7x9yqym5qrwjzpr7xwr4t6pjn5ca9g02hnuyvxd9jqpv70a7w05mqatnyzhnfl462xmsehgcwczjkrzz2qxk3wa0elrnvnh9qlz3cc2g8xyag9yrds0jepsvskl55zqtntp6qvkj9nkmlercd95j8g9xdgxv0sq0y6gq32ng5r9zcs4wt3vryhldxtr9epyz5vnnx4mf2lhv4r56mftaugjemxezpjcv9enr259tf7qq66a7ngsc3y0a5jlm8jg2rnd9c38ny2m5egl7ssx62zcscztkmjqpkvta2za4ym5jkatgzd2zspfcrc7gesjxjgcvhsua3jpyzpdan6mestyqsx5eatkmzv9zmpwkur3c34sjzc"},split:{prover:y+"split.prover.e6d12b9",verifier:"split.verifier.2f9733d",verifyingKey:"verifier1qygqqqqqqqqqqqpehuqqqqqqqqq930cqqqqqqqqq295qzqqqqqqqqyyyqyqqqqqqqzjjvqgqqqqqqqqvqqqqqqqqqqqyjhdhawnd33kv88ehql385slkd7lyr46jnf7yathmnxnr7at2j6u4nfkkvryujwt8rvhdfpuw94qq8e7sp33sjtyz53q89k85ttcg2cvadvuadeuq5xn4hgkmvm3qj93er0t2pjpd2p4kd3zy2gqmqd5qpfzdk973253ufzafqwd9879c7wpdv500a4xhetxkareamyl2qqzdd5hxl94vnmrkluzx0te32rkusqs20xswldqdgekfh6p25yxjhls20k59lsfn9az8jak9lr6r745ujsq0jq9fvugqyqchuca8xq6stq0svvu7e4xguc84t3s72erg4ve2z3nsr3jqv6jtala9j3xf5msksupprwwxkwwl58pv2hmr4g5h4xqym3nj6ax7ujx70np7egc4nw0w3j02m34eq00gssjq0pf9xfltxtef29crye3sul45kkawnrl6uzvquszlgltwtgx2xjlehgh0xpdm68dyjev9qxsleetpc33mns5jakrmqqryk8qgmnc56dzgcwm99eccq6c93576s946jztmuvgp8522y00jpck54wlcg3me44sk8usehsnjgm85zmypjsf7nlp06na927dtqp7u45jnd3em0n9h0wgtgvwh7lyhq4guwdfxws8mswwzfr5fjdtv0smjeq3r58v03amrhgr2ex4h7q8wapp8h5ug8vh0fxkt6yp3l2mas3l0jmmpedy9vx4lnxmjwn8t4wxyrdnnr54jxmp0wyu3sf6wwkqa6r2g2u9qu5km92fjnckme07mrxghuxh9ktpj9cvaf08sccdtdwjsnkyt9qu2x5ft27tkrskudrqpyr63x640xlk9wqpmy3edx58wxwzesmx22v62y6lshjv3wur83jlmwm74qqpd34ewmrk7eg0jfp7cretx5jwfv5c904v9qazfyluh5fpdczgx9fluayuukfwnqjq8tdwx3shuy5"},transfer_private:{prover:y+"transfer_private.prover.2b487c0",verifier:"transfer_private.verifier.3a3cbba",verifyingKey:"verifier1qygqqqqqqqqqqqqvccqqqqqqqqqz43sqqqqqqqqq7jqqzqqqqqqqpj4vqyqqqqqqqq0zuqgqqqqqqqqvqqqqqqqqqqqyvnz4pl9kjr0ks3dtkz67gw8tyqzs3sxskt8xg6keqrrqk9nj3e39kg65lzz5sd5tug2ecrpmfg5peseqmv709nry8up96qwsuvpp8684njpe4qunfhf7ywc0a7lck9rdlfcred8krn60lgztx4wlrlmspnnkwe9gmqk07tt5lj3wxcpucpshz7ec6w5mqvspprmu88lr9tr9e7a9fqdye0jdajq46pt35hdjsruamruf6v73fu68hv5fcsndmfq3c65yjrmljfg3343vj8cca2js2gumrks9eepm3d7g02jw0se9eqpaj86kpscxu4vuvw7jedgt2c0l4fk5zqwdu3vfhrazjwedl5d0n9w75ky0924qjjzg3c04dw7p8uqxqnuph6d3d935zqavxtte336jmnpk0hkjn80cejqfljl7w6jtnl3tedhtdk4cx207c7lud9xagzcp760x47h3hrw68syru4rnr3zgy99wcpnglpjvndzrjpc3z8c53xyqx0jh8cnt6gn92fgqu8a5huespxgnckqgttq8aa7xngxt9f5lpq2zgakfhtfvhlcy66k3depln3x67ck2m9t0fvnetjygj6h2er2fqqwcf2ghjp5fvq4e68635ql0lv5uv4c82575dcv87a0y8745g6gvjenh49zppsekc82dect9ggp3aqxqnc73dmd38pe4x7v9wwv6namfe7337tczyfz47dyxxzy8fslktv47yn8r87n0nap5qlc9gzgd2yq8m6zj0ulzgaqls2dq2atkfzxu5rjguvcjxnmn7hr8uxgxuzrwtmcftz4emn24vpq5pcwxf29a7w5p80e7f2tv7ags5k0pj9fghaklzm5xrakpsk3gv4xzvzqj6u2denjw60q777r5889xqrvchhtac4xspue4mncvgerscq4dslzkt4mg4zuv6t6gahcvnm2p6r02ns62xsdexs8jxt"},transfer_private_to_public:{prover:y+"transfer_private_to_public.prover.1ff64cb",verifier:"transfer_private_to_public.verifier.d5b60de",verifyingKey:"verifier1qygqqqqqqqqqqqrwjvqqqqqqqqqgpycqqqqqqqqquvvqzqqqqqqqqceuqyqqqqqqqqyd6qqqqqqqqqqvqqqqqqqqqqqr8z97pzqh2lxcc4tasdu784svuk6lv62sj78flptnzqks3hyu42ymryngdzr2mw6j4nxm4cmx8tgqnfzdkccekds6nhs4c7t2hf84d38jkuufdrf43ls4zm9htqarx9mv3gswcxp74kelgy36yhpsrfkgzdr8vy8580sulvaw36pxjjv0j543rml679z305kt2ju3wzarmsukzkfp56qnc0pjuptzajkes95uspd0uz3fd9fu5vmxwfwq9cj5qh0yjq398h729yygdm0fzkrl9g6faevalks3yc7xl3le38k77t3exqqnn82yyjpunpn763s8hkaguvn67jehqcvt8tvhql8skpesm9tm2hgeryk934h8c8cdcgynjq5cj2qer7kkjc2rrmg5j6agac0ya88up0sl2skxsvkw0rgxlgxjtjqc4g8c3xssq2sk6e2dufvc480rj8vqcrhtqsjqdkzq3nanlvngrjxchnzwfywwjphj5jeza2lyynrk5awz8v6jtwgxu2fs6uqrykz5lz6qpt2dfs670clhjpagxny40nmgeqtf9w8hu4v7yjpgwpv89v05u2ahdryu4538augkjhdx3hvfahwuszd8zyqmcxhrcq039hcrkd5qgadhj257vvrf27dwu64kl0j237efzvt5d360umxw3xk6tej5cxv9zqxqzc7ryqndhttaw5act9kwt8kvxtdjnzy99q8gzmg2429f94h6csrqejzc4n40xjcsdwn98hdekyqzytrh35w6t3r5d86kqt897kv5mldx9w06h4rldk734hvn096gt7e4smleja7canyfpv798cksshgq7hkyt6elvzp3rpj9nd84ykt9lzgjsswn4y8934ay3575u3sx7mkeuca0zsere2q0jmlsl6w6v2qcq424uhnmqn9q5vw22jgy94pry2junps40ug867d79h2zvd0n02nmlz05hd"},transfer_public:{prover:y+"transfer_public.prover.a74565e",verifier:"transfer_public.verifier.a4c2906",verifyingKey:"verifier1qygqqqqqqqqqqqq79uqqqqqqqqqp2tcqqqqqqqqqwd4qqqqqqqqqp5ydqqqqqqqqqqvyqqqqqqqqqqqvqqqqqqqqqqqre7drur40rst43dq9at346py7hkmrhexarf59f2tjt4stlsdj5uwrgnrkjjej7jf3djk2w4njtxcq0mezac793craujm8mr7wutcqtu2aday5g03wl0cu2572fsrtpyjhdyqlh0447z7dshlkhksjsusgp4ezrvc0n64fwetfmml3kvfg7n03w2e602sl7et4cpw98hgpzxwzrmzu8r3x77v49njysy2lp55xsqh6t5qjvhyl5a7nzy3e73y7dzvvs9p450u0s8g84prqnrk6jeah89c6882uzqdvxgzcedfmsc43uq99n3ycrjh70ys8n02pyvdvzmu7z608desdd5yw9dc8v3ddrdddmrzz2pupe09yn9esy25cfzmd0wqcgjdxm4dvlt2t6k66lw8e9ccj49qj2ahpht62kh7p56xpvpekenq2arng2t55mwxe59mqpkp6a0yqlwt7tdf98rt3kqlr9tdtq6hua3wrka0mqzhva4nhucxn9u4w92mly69jy2c7cqm5ftnk3m0qxy9spaxwfz0xkqd947yvf2zh8h4y59fltxdpeu4utpv9zw0cr7ad9d462qxyc2f05lezw6dwhcmep942qqv38lp3x9efestt5pk8rplvmrk0zz9zel48l8h9ldfzyd8zyr7knze92cdyanez6k7q5fu6tnw9wqrywjnhevaujz20xn0h3n47g85zs6ejfh7z8jt9qjesqgmdymvcxlceudkdsl49t5r69c4mg7hfwyq88z7zn0efda8fdjmhz8aaq24q34g2ekdzr5w9em3cev2ktxtmupqwltu0nh3fjzm04cy3cgnqlnqq0chzq4rs2dmfjwryxrxxgjtdcsnn9fpwykkxwfuervtznu3lmvhhpdflgwgm0xklu6c0xsxt9dfcp29w2nz6zkjetz7cqremg68eqxq86rn082czp50ldw9qkq6w3p9xxg4hrg"},transfer_public_to_private:{prover:y+"transfer_public_to_private.prover.1bcddf9",verifier:"transfer_public_to_private.verifier.b094554",verifyingKey:"verifier1qygqqqqqqqqqqqrhvqqqqqqqqqq8kcqqqqqqqqqqu0xsqqqqqqqqqw0kqqqqqqqqqreg7qqqqqqqqqqvqqqqqqqqqqqta360tn6dhv5z559ejfahwq88lxtd498py5p3vw5u3rwtfvdzpxq7fuqdahsrennq80g8yc6wqjyq8ahdv3jzry0mxceed0jr2cd0wye3e7782pg3phsu8h7hcapfgdghcgg2ykfc2682xefhsp3plqnqp692097k4ja82ecc2descl4d6csug04cz2j9a5pk3djx6xde2ghgq7uqvuhsg47ksueeetvc7mh2qpvqjmph9eekp5waqunkeea9vkvzyl8culmn5t7l9ke3r7uz8v5r8njjdkug6va9vy6axx9aq2kxaqdd9ll2m3j7qg7eyq3k2pnhq7gx2kv8vm3yf5pyqtywt2hvur5uv45y5st53qh970dktd3k709d9sqwv0d6qaksxjcp2cxu282hcewhy66vfs5kp35e6k4shdmjzmglyqqcsnupv8xwdr3596qypzshnuuq8rpm8pyjwtws63wsazqt8tlqhkkxucf0zjc384wvv2jemdnjwd6hn9745h8qc4kqp0rzs9wkx0hcp22xzuyyk7gpsc9ahw7pdenpje3etp37lfrcuntehl8wm2eudrh0j04szjzrv0n3r2gv04mgau5ysqtdcddq44xtt6t6f08c9zuhqukk8zy75jru0exufnh74u97d4xwe005ug7ywmcnyz8u6nvdav2xxqqzpg0luhghl8xu7g0cjgxse0lnqqedc7cc47nc048h2t44gedjq7f49ghajc9gwclp962v4q2855qvgdtkmr29cpwwq8vghlcjv0g6k0a0xa8yrmmnd5l7umnuqcd4x9rcejc3mkjgpw8y6mue2n5tx9cpahnw37yey5k38j98dnr9jss00420jvk7nh59hul7ef69n8ktcltl8f0t93rya5y8d2cspyjp6c7crvg2d4m37z78dualsqr9u7vtge07psdtl4l9785fxl3wgf9u277puvgvuq"},unbond_public:{prover:y+"unbond_public.prover.78b2191",verifier:"unbond_public.verifier.96c3590",verifyingKey:"verifier1qygqqqqqqqqqqqp89yqqqqqqqqqp62gqqqqqqqqq892qqqqqqqqqqym2qqqqqqqqqparjqqqqqqqqqqvqqqqqqqqqqqp9uker5608hsejeh46lk307z2ewatecukttkp7elhurugmwqay3ypevdjjt6ly68e9eyt2cnx7dcqrrf24kwmmy5ptlpyy72r5ul2lynras4lluy7ke6spzjx97m2qvjy3jhsdk8tpkwj3vqf37hcncjcqm5mrvp4v8txatw8hhtrklu0pjgx9p39jvvjxsqghf8rxm8edyacw3h8g7mqz8u8acay65tskf42qz5sqfvpfvg9ycnw3mp7jqnv80dnmev9k788aycnx9ufa09qfzjnxwnr6503ckc8465welwq7vxqlqyuezzshvq3gfpvdnqgrsda7kv88sq7nqpttlyqczrmsf6xln80ejcwshagevykxjc09numhdc4r7qlme5zlrjru7lyexcxq75qvtpqhkkz0zmfmm9paddlrk88xcctmhdun6rt0rzkdxx0fdgughvxlmyq32ct8s0k0qlf3rwlggvhvsw4ekl683ls9la7lcga87ereutr34fke6qzdkxz94rqzrl2msyhax9grx2t5jtkfenxsudq6mfjv0uhtxycalyk2k6c4hwdq5z33x4kcgns2tsx5hstvv6pp9phv0cedf4ysqgavdjlnx2g4tvw9wmmz7ghmm03jkutq568pxx7ahp7kjfe9ta2eas7qkj2r4ue0pwa5ft9k88r5qw32mymhz4p3cpg5g5v0z6kkukh9zxjzsdqnvglsdtj64u4dtu2epnnuckz3fgqw4mrn54nvvwv8zquwsz9jqp4zrux2xghqk6fh4y29vm3aq4v6kh4zmnwhuf0y249grf8u7xc6cu3rrz5ugpnzvawpyypmfnl58xgm0gq8m8zsn7uw436hhjwewyhwkva6trxdfxfr7rpn2qdu2yp2ulu7ezpr0meet8ht3zsqjyezyylcgrjttgphl0t2ckte6jwm6la7mlhz7ya8rancl44m9dpy798f9"}},g=new Set(["transfer_private","private","transferPrivate","transfer_private_to_public","privateToPublic","transferPrivateToPublic"]),d=new Set(["transfer_private","private","transferPrivate","transfer_private_to_public","privateToPublic","transferPrivateToPublic","transfer_public","public","transferPublic","transfer_public_to_private","publicToPrivate","transferPublicToPrivate"]),w=new Set(["private","transfer_private","transferPrivate"]),m=new Set(["private_to_public","privateToPublic","transfer_private_to_public","transferPrivateToPublic"]),k=new Set(["public","transfer_public","transferPublic"]),j=new Set(["public_to_private","publicToPrivate","transfer_public_to_private","transferPublicToPrivate"]);function f(e){throw console.error(e),e}n()}catch(x){n(x)}}))},9669:(e,r,t)=>{t.a(e,(async(e,r)=>{try{var n=t(5052),a=t(6891),i=t(9933),s=e([n,i]);[n,i]=s.then?(await s)():s,await(0,i.CK)();const o="https://api.explorer.aleo.org/v1",f=new n.AleoKeyProvider,h=new n.ProgramManager(o,f,void 0);f.useCache(!0);let u="";async function c(e,r,t,a,s=!1){console.log("Web worker: Executing function locally...");const c=performance.now();try{const q=h.createProgramFromSource(e);if(q instanceof Error)throw"Error creating program from source";const o=q.id();if(!q.hasFunction(r))throw`Program ${o} does not contain function ${r}`;const p=`${o}:${r}`,l=await h.networkClient.getProgramImports(e);if(l instanceof Error)throw"Error getting program imports";if(u!==e){const n=await h.synthesizeKeys(e,r,t,i._q.from_string(a));h.keyProvider.cacheKeys(p,n),u=e}const y=new n.AleoKeyProviderParams({cacheKey:p}),v=await h.executeOffline(e,r,t,s,l,y,void 0,void 0,i._q.from_string(a));console.log(`Web worker: Local execution completed in ${performance.now()-c} ms`);const g=v.getOutputs(),d=v.getExecution();let w="";const m=f.getKeys(p);if(m instanceof Error)throw"Could not get verifying key";const k=m[1];return d?((0,i.hz)(d,k,q,"hello"),w=d.toString(),console.log("Execution verified successfully: "+d)):w="",console.log(`Function execution response: ${g}`),{outputs:g,execution:w}}catch(e){return console.error(e),e?e.toString():"Unknown error"}}async function q(){return(new i._q).to_string()}const p={executeOffline:c,getPrivateKey:q};(0,a.Jj)(p),r()}catch(l){r(l)}}),1)},6891:(e,r,t)=>{t.d(r,{Jj:()=>f});const n=Symbol("Comlink.proxy"),a=Symbol("Comlink.endpoint"),i=Symbol("Comlink.releaseProxy"),s=Symbol("Comlink.finalizer"),c=Symbol("Comlink.thrown"),q=e=>"object"==typeof e&&null!==e||"function"==typeof e,o=new Map([["proxy",{canHandle:e=>q(e)&&e[n],serialize(e){const{port1:r,port2:t}=new MessageChannel;return f(e,r),[t,[t]]},deserialize(e){return e.start(),v(e,[],r);var r}}],["throw",{canHandle:e=>q(e)&&c in e,serialize({value:e}){let r;return r=e instanceof Error?{isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:{isError:!1,value:e},[r,[]]},deserialize(e){if(e.isError)throw Object.assign(new Error(e.value.message),e.value);throw e.value}}]]);function f(e,r=globalThis,t=["*"]){r.addEventListener("message",(function a(i){if(!i||!i.data)return;if(!function(e,r){for(const t of e){if(r===t||"*"===t)return!0;if(t instanceof RegExp&&t.test(r))return!0}return!1}(t,i.origin))return void console.warn(`Invalid origin '${i.origin}' for comlink proxy`);const{id:q,type:o,path:u}=Object.assign({path:[]},i.data),p=(i.data.argumentList||[]).map(m);let l;try{const r=u.slice(0,-1).reduce(((e,r)=>e[r]),e),t=u.reduce(((e,r)=>e[r]),e);switch(o){case"GET":l=t;break;case"SET":r[u.slice(-1)[0]]=m(i.data.value),l=!0;break;case"APPLY":l=t.apply(r,p);break;case"CONSTRUCT":l=function(e){return Object.assign(e,{[n]:!0})}(new t(...p));break;case"ENDPOINT":{const{port1:r,port2:t}=new MessageChannel;f(e,t),l=function(e,r){return d.set(e,r),e}(r,[r])}break;case"RELEASE":l=void 0;break;default:return}}catch(e){l={value:e,[c]:0}}Promise.resolve(l).catch((e=>({value:e,[c]:0}))).then((t=>{const[n,i]=w(t);r.postMessage(Object.assign(Object.assign({},n),{id:q}),i),"RELEASE"===o&&(r.removeEventListener("message",a),h(r),s in e&&"function"==typeof e[s]&&e[s]())})).catch((e=>{const[t,n]=w({value:new TypeError("Unserializable return value"),[c]:0});r.postMessage(Object.assign(Object.assign({},t),{id:q}),n)}))})),r.start&&r.start()}function h(e){(function(e){return"MessagePort"===e.constructor.name})(e)&&e.close()}function u(e){if(e)throw new Error("Proxy has been released and is not useable")}function p(e){return k(e,{type:"RELEASE"}).then((()=>{h(e)}))}const l=new WeakMap,y="FinalizationRegistry"in globalThis&&new FinalizationRegistry((e=>{const r=(l.get(e)||0)-1;l.set(e,r),0===r&&p(e)}));function v(e,r=[],t=function(){}){let n=!1;const s=new Proxy(t,{get(t,a){if(u(n),a===i)return()=>{!function(e){y&&y.unregister(e)}(s),p(e),n=!0};if("then"===a){if(0===r.length)return{then:()=>s};const t=k(e,{type:"GET",path:r.map((e=>e.toString()))}).then(m);return t.then.bind(t)}return v(e,[...r,a])},set(t,a,i){u(n);const[s,c]=w(i);return k(e,{type:"SET",path:[...r,a].map((e=>e.toString())),value:s},c).then(m)},apply(t,i,s){u(n);const c=r[r.length-1];if(c===a)return k(e,{type:"ENDPOINT"}).then(m);if("bind"===c)return v(e,r.slice(0,-1));const[q,o]=g(s);return k(e,{type:"APPLY",path:r.map((e=>e.toString())),argumentList:q},o).then(m)},construct(t,a){u(n);const[i,s]=g(a);return k(e,{type:"CONSTRUCT",path:r.map((e=>e.toString())),argumentList:i},s).then(m)}});return function(e,r){const t=(l.get(r)||0)+1;l.set(r,t),y&&y.register(e,r,e)}(s,e),s}function g(e){const r=e.map(w);return[r.map((e=>e[0])),(t=r.map((e=>e[1])),Array.prototype.concat.apply([],t))];var t}const d=new WeakMap;function w(e){for(const[r,t]of o)if(t.canHandle(e)){const[n,a]=t.serialize(e);return[{type:"HANDLER",name:r,value:n},a]}return[{type:"RAW",value:e},d.get(e)||[]]}function m(e){switch(e.type){case"HANDLER":return o.get(e.name).deserialize(e.value);case"RAW":return e.value}}function k(e,r,t){return new Promise((n=>{const a=new Array(4).fill(0).map((()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16))).join("-");e.addEventListener("message",(function r(t){t.data&&t.data.id&&t.data.id===a&&(e.removeEventListener("message",r),n(t.data))})),e.start&&e.start(),e.postMessage(Object.assign({id:a},r),t)}))}}},c={};function q(e){var r=c[e];if(void 0!==r)return r.exports;var t=c[e]={exports:{}};return s[e](t,t.exports,q),t.exports}q.m=s,q.x=()=>{var e=q.O(void 0,[933],(()=>q(9669)));return e=q.O(e)},e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",r="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",t="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",n=e=>{e&&e.d<1&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},q.a=(a,i,s)=>{var c;s&&((c=[]).d=-1);var q,o,f,h=new Set,u=a.exports,p=new Promise(((e,r)=>{f=r,o=e}));p[r]=u,p[e]=e=>(c&&e(c),h.forEach(e),p.catch((e=>{}))),a.exports=p,i((a=>{var i;q=(a=>a.map((a=>{if(null!==a&&"object"==typeof a){if(a[e])return a;if(a.then){var i=[];i.d=0,a.then((e=>{s[r]=e,n(i)}),(e=>{s[t]=e,n(i)}));var s={};return s[e]=e=>e(i),s}}var c={};return c[e]=e=>{},c[r]=a,c})))(a);var s=()=>q.map((e=>{if(e[t])throw e[t];return e[r]})),o=new Promise((r=>{(i=()=>r(s)).r=0;var t=e=>e!==c&&!h.has(e)&&(h.add(e),e&&!e.d&&(i.r++,e.push(i)));q.map((r=>r[e](t)))}));return i.r?o:s()}),(e=>(e?f(p[t]=e):o(u),n(c)))),c&&c.d<0&&(c.d=0)},a=[],q.O=(e,r,t,n)=>{if(!r){var i=1/0;for(f=0;f<a.length;f++){for(var[r,t,n]=a[f],s=!0,c=0;c<r.length;c++)(!1&n||i>=n)&&Object.keys(q.O).every((e=>q.O[e](r[c])))?r.splice(c--,1):(s=!1,n<i&&(i=n));if(s){a.splice(f--,1);var o=t();void 0!==o&&(e=o)}}return e}n=n||0;for(var f=a.length;f>0&&a[f-1][2]>n;f--)a[f]=a[f-1];a[f]=[r,t,n]},q.d=(e,r)=>{for(var t in r)q.o(r,t)&&!q.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},q.f={},q.e=e=>Promise.all(Object.keys(q.f).reduce(((r,t)=>(q.f[t](e,r),r)),[])),q.u=e=>e+".bundle.js",q.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),q.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{var e;q.g.importScripts&&(e=q.g.location+"");var r=q.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var t=r.getElementsByTagName("script");if(t.length)for(var n=t.length-1;n>-1&&!e;)e=t[n--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),q.p=e})(),(()=>{q.b=self.location+"";var e={530:1};q.f.i=(r,t)=>{e[r]||importScripts(q.p+q.u(r))};var r=self.webpackChunkaleo_website=self.webpackChunkaleo_website||[],t=r.push.bind(r);r.push=r=>{var[n,a,i]=r;for(var s in a)q.o(a,s)&&(q.m[s]=a[s]);for(i&&i(q);n.length;)e[n.pop()]=1;t(r)}})(),i=q.x,q.x=()=>q.e(933).then(i);q.x()})();
//# sourceMappingURL=530.bundle.js.map